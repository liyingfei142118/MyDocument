1>操作系统有：批处理系统（单道批处理系统和多道批处理系统）；分时系统，实时系统；
2>批处理系统：把一批作业一起交给系统，中间不能进行干预；
3>分时系统允许同时有多个用户使用，即把一段时间按照某种规则分给每一个用户执行相关的操作；
4>实时系统指系统能够及时响应外部的请求

大端字节序(big-endian)：按内存的增长方向，低位数据存储于高位内存中，高位数据放低地址
小端字节序(little-endian)：按内存的增长方向，低位数据存储于低位内存中，高位数据放高地址
网络字节序一般是大端序，主机字节序一般是小端序（比如intel CPU）。

多道批处理主要的特点：
1.系统的吞吐量大
2.资源的利用率高
但由于多道批处理是整批的作业在运行，因此有时候要等很长时间才能运行完，所以效率很重要。
这里需要注意的是：多道批处理还不具有交互性。

+ 覆盖技术的实现是把程序划分为若干个功能上相对独立的程序段，按照其自身的逻辑结构使那些不会同时运行的程序段共享同一块内存区域。程序段先保存在磁盘上，当有关程序的前一部分执行结束后，把后续程序段调入内存，覆盖前面的程序段。 
+ 交换技术：在分时系统中，用户的进程比内存能容纳的数量更多，系统将那些不再运行的进程或某一部分调出内存，暂时放在外存上的一个后备存储区，通常称为交换区，当需要运行这些进程时，再将它们装入内存

两个的目的：
减少占用的主存空间是最终目的；
逻辑上扩充主存容量可以看作是方法。

进程调度指的是，进程状态的切换。只要可以引起进程状态发生变化，就会导致进程调度。

实时操作系统优先考虑的是实时性与可靠性，实时操作系统的效率一般比分时要低，是适当牺牲了效率来保障了实时

死锁的发生必须具备下列四个必要条件。

(1) 互斥条件：指进程对所分配到的资源进行排它性使用，即在一段时间内某资源只由 一个进程占用。如果此时还有其它进程请求该资源，则请求者只能等待，直至占有该资源 的进程用毕释放。

(2) 请求和保持条件：指进程已经保持了至少一个资源，但又提出了新的资源请求，而 该资源又已被其它进程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放。

(3) 不剥夺条件：指进程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完 时由自己释放。

(4) 环路等待条件：指在发生死锁时，必然存在一个进程――资源的环形链，即进程集合{P0，P1，P2，…，Pn}中的 P0 正在等待一个 P1 占用的资源；P1 正在等待 P2 占用的资源，……，Pn 正在等待已被 P0 占用的资源。

在有序分配资源时，系统将所有资源按类型进行线性排队，并赋予不同的序号。例如， 令输入机的序号为 1，打印机的序号为 2，磁带机为 3，磁盘为 4。所有进程对资源的请求 必须严格按照资源序号递增的次序提出，这样，在所形成的资源分配图中，不可能再出现 环路，因而摒弃了“环路等待”条件。事实上，在采用这种策略时，总有一个进程占据了 较高序号的资源，此后它继续申请的资源必然是空闲的，因而进程可以一直向前推进。

外部中断指的是CPU执行指令以外的事件产生的中断，通常是指来自CPU与内存以外的中断。
A：键盘输入属于外部事件，每次键盘输入CPU都需要执行中断以读入输入数据，所以能引起外部中断。
B：除数为0属于异常，也就是内中断，发生在CPU内部。
C：浮点运算下溢将按机器零处理，不会产生中断。
D：访存缺页属于CPU执行指令时产生的中断，也不属于外部中断。

临界区：每个进程中访问临界资源的那段程序叫做临界区。进程对临界区的访问必须互斥，每次只允许一个进程进去临界区，其他进程等待

管程具有特性：①局部于管程的数据只能被局部于管程内的过程所访问；②一个进程只有通过调用管程内的过程才能进入管程访问共享数据；③每次仅允许一个进程在管程内执行某个内部过程

fork()是全部复制
vfork()是共享内存
clone()是可以将父进程资源有选择地复制给子进程，而没有复制的数据结构则通过指针的复制让子进程共享，具体要复制哪些资源给子进程，由参数列表中的clone_flags来决定。另外，clone()返回的是子进程的pid。

位示图法是利用一串二进制位的值来反映磁盘空间的分配使用情况。
空闲块法是文件系统建立了一张记录全部空闲物理块的空闲块表。
空闲块链表法是系统将所有的空闲物理块连成一个空闲块链表，用一个指针指向第一个空闲块，每个空闲块含有指向下一个空闲块的指针，最后一块的指针指向NULL，表示达到链尾。
UNIX系统采用的是一种对空闲块链表改进的方法，把所有空闲块按固定数量分组，组与组之间形成链接关系，这就是空闲块成组链接法。


下面哪些表格是分页存储管理系统中使用到的？
1. 需要页表，建立进程中的块（页）-》  内存中的块（页框）的映射关系；
2. “分页式存储管理是以块为单位进行存储分配的，每块的尺寸相同，在有存储请求时，只要系统中有足够的空闲块存在，就可以进行分配，分配哪一块都一样，无好坏之分”所以还需要 采用“存储分块表”和“位示图”的管理方法，


操作系统中：
栈（操作系统）：由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈， 栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放
堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。 堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些

I/O通道的目的是为了建立独立的I/O通道 ，使得原来一些由CPU处理的I/O任务由通道来承担，从而解脱cpu。通道所能执行的命令局限于I/O操作的指令，也就是执行I/O指令集。

实时操作系统优先考虑的是实时性与可靠性，实时操作系统的效率一般比分时要低，是适当牺牲了效率来保障了实时
